- provide :title, @nc_user.username

.row
  .large-12.columns
    
    - if can? :update, Legal::NcUser
      = link_to 'Leave comment', '#', :'data-reveal-id' => "new-nc-user-comment-modal", class: "button tiny right"
      = render partial: 'new_nc_user_comment', locals: { nc_user: @nc_user }

    h3 Account details
    .row: .large-12.columns
      | Signup date: 
      = @nc_user.signed_up_on.try(:strftime, "%d %B %Y")
    .row: .large-12.columns
      | Status: 
      = @nc_user.status_icons
    
    h3 Related Users
    .row: .large-12.columns
      #user-relations.panel.callout
    
    - if @nc_user.abuse_reports.direct.present?
      h3 Abuse Reports
      .row: .large-12.columns
        table
          thead
            th Type
            th Reported by
            th Reported on
            th Processed?
            th Actions
          tbody
            - @nc_user.abuse_reports.direct.each do |report|
              tr
                td = report.abuse_report_type.try(:name)
                td = User.find(report.reported_by).name
                td = report.created_at.strftime("%d %B %Y at %H:%M")
                td = report.processed ? "Yes" : "No"
                td
                  a onclick="toggleTableRow('.abuse-report-#{report.id}', this);"
                    i.fa.fa-angle-down.action
              tr style="display:none"
              tr style="display:none" class="abuse-report-#{report.id}"
                td colspan="5"
                  fieldset style="margin:0;"
                    = render partial: "abuse_reports/show_partials/#{report.abuse_report_type.name.downcase.gsub(' ', '_')}", locals: { report: report }
                    
    - if @nc_user.abuse_reports.indirect.present?
      h3 Related Abuse Reports
      .row: .large-12.columns
        table
          thead
            th Type
            th Username / Domain
            th Reported by
            th Reported on
            th Processed?
            th Actions
          tbody
            - @nc_user.abuse_reports.indirect.sort { |a, b| comp = (a.reportable_name <=> b.reportable_name); comp.zero? ? (a.created_at <=> b.created_at) : comp }.each do |report| 
              tr
                td = report.abuse_report_type.try(:name)
                td = report.reportable_name
                td = User.find(report.reported_by).name
                td = report.created_at.strftime("%d %B %Y at %H:%M")
                td = report.processed ? "Yes" : "No"
                td
                  a onclick="toggleTableRow('.abuse-report-#{report.id}', this);"
                    i.fa.fa-angle-down.action
              tr style="display:none"
              tr style="display:none" class="abuse-report-#{report.id}"
                td colspan="6"
                  fieldset style="margin:0;"
                    = render partial: "abuse_reports/show_partials/#{report.abuse_report_type.name.downcase.gsub(' ', '_')}", locals: { report: report }
                    
    - if @nc_user.comments.present?
      h3 Comments
      .row: .large-12.columns
        - @nc_user.comments.each do |comment|
          - name = comment.user.present? ? comment.user.name : 'R2-D2'
          .row
            = name + " on " + comment.created_at.strftime("%d %B %Y at %H:%M")
            .panel = comment.content
